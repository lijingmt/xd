#include <globals.h>
#include <mudlib/include/mudlib.h>
//等级
int level;
//等级提示
private int levelFlag=0;
//经验
int exp;
//当前升级所需要的经验，完成了多少
int current_exp;

int query_levelFlag(){
	return levelFlag;
}
//上次等级需要经验值
int query_last_exp(){
	int l_level = level-1;
	if(l_level<=0)
		l_level = 1;
	float a = (float)l_level;
	float tmp = a/10.00;
	float need = 0.00;
	if(l_level<10)
		need = a*a*100;
	else
		need = a*a*100*tmp;
	int rst = (int)need;
	return rst;
}
int need_exp;
int query_need_exp(){
	return need_exp;
}
//升级所需经验 1-10级:LV*LV*100 10-60级:LV*LV*100*（LV/10）
void set_need_exp(){
	if(level==0)
		level = 1;
	float a = (float)level;
	float tmp = a/10.00;
	float need = 0.00;
	if(level<10)
		need = a*a*100;
	else
		need = a*a*100*tmp;
	int rst = (int)need;
	need_exp = rst;	
	//return rst;
	//return (level+1)*(level+1)*(level+1)*100 - level*level*level*100; 
}
void query_if_levelup(){
	check_level();
}
private void check_level(){
	if( (exp-query_last_exp()) >= query_need_exp() ){
		int tmp = (exp-query_last_exp()) - query_need_exp(); 
		levelFlag = 1;
		level++;
		//升级后设置下次升级需要经验值段
		set_need_exp();
		int level_now = level - 1;
		//如果升级，根据两大阵营中六个职业不同的基本属性增加一定的值
		if(this_object()->query_raceId()=="human"){//人类阵营
			if(this_object()->query_profeId()=="jianxian"){//剑仙
				this_object()->set_str(12+(int)(level_now*2.5));
				this_object()->set_dex(6+(int)(level_now*1.5));
				this_object()->set_think(2+(int)(level_now*0.5));
			}
			if(this_object()->query_profeId()=="yushi"){//羽士
				this_object()->set_str(8+level_now);
				this_object()->set_dex(2+(int)(level_now*0.5));
				this_object()->set_think(12+(int)(level_now*3));
			}
			if(this_object()->query_profeId()=="zhuxian"){//诛仙
				this_object()->set_str(10+(int)(level_now*1.5));
				this_object()->set_dex(12+(int)(level_now*2));
				this_object()->set_think(4+level_now);
			}
		}
		if(this_object()->query_raceId()=="monst"){//妖魔阵营
			if(this_object()->query_profeId()=="kuangyao"){//狂妖
				this_object()->set_str(14+(int)(level_now*3));
				this_object()->set_dex(2+level_now);
				this_object()->set_think(2+(int)(level_now*0.5));
			}
			if(this_object()->query_profeId()=="wuyao"){//巫妖
				this_object()->set_str(8+(int)(level_now*1.5));
				this_object()->set_dex(2+(int)(level_now*0.5));
				this_object()->set_think(10+(int)(level_now*2.5));
			}
			if(this_object()->query_profeId()=="yinggui"){//影鬼
				this_object()->set_str(10+level_now);
				this_object()->set_dex(14+(int)(level_now*2.5));
				this_object()->set_think(3+level_now);
			}
		}
		//升级重置生命和魔法
		this_object()->set_life(this_object()->query_life_max());
		this_object()->set_mofa(this_object()->query_mofa_max());
		//升级后重置当前等级升级到下一级需要的经验为0
		current_exp = tmp;
	}
	else
		levelFlag = 0;
}
int query_level(){
	return level==0?1:level;
}
string query_level_cn(){
	return "等级："+MUD_CHINESED[query_level()]+"级";
}
int query_exp(){
	return exp;
}
int query_levelUp_need_exp(){
	return query_need_exp(); 
}
string query_levelUp_need_exp_cn(){
	return "距离升级还需要 "+query_need_exp()+" 点经验";
}
